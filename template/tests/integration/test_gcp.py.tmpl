import logging
import pytest
import os


@pytest.mark.gcp
def test_secret_manager():
    """
    Test GCP Secret Manager Credentials

    Verify GCP credentials can be received from Secret Manager successfully.
    """
    from {{.project_name}}.common import spark_credentials

    client_id, client_secret = spark_credentials.get_credentials_gcp()

    assert not client_id is None
    assert not client_secret is None

@pytest.mark.gcp
@pytest.mark.spark
@pytest.mark.usefixtures('spark')
def test_gcp_spark_credentials(spark):
    """
    Test Spark's GCP Credentials

    Verify GCP credentials can be properly configured in Spark Configuration. This test should be
    ommitted from testing in Databricks as the Spark Configuration won't be accessible.
    """
    from {{.project_name}}.common import spark_credentials

    key_name='google.cloud.auth.service.account.private.key.id'
    secret_name='google.cloud.auth.service.account.private.key'
    client_id, client_secret = spark_credentials.get_credentials_spark_config(spark, key_name, secret_name)

    assert not client_id is None
    assert not client_secret is None